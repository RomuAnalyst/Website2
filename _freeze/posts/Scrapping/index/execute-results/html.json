{
  "hash": "7a1289d7b0500576dd62e6fae997e3b3",
  "result": {
    "markdown": "---\ntitle: Scraping et base Excel\nsubtitle: Collecte de données web et création de fichiers excel\ndescription: |\n  Cet article traite de l'extraction de données à partir d'un site web afin de constituer une base de données exploitable. Vous trouverez des informations sur certaines parties du code dans le cours [**les boucles dans R**](/ia2.qmd).\ncategories:\n  - R\n  - Web\n  - Tables\nauthor: Romuanalyst\ndate: \"07/12/2023\"\nimage: data in the cloud.png\nimage-alt: \"Table 1: Example. Has two subtables: Subtable a, Cars, with columns for speed and dist; and subtable b, Pressure, with columns for temperature and pressure.\"\nlang: fr\npage-layout: full\n---\n\n\n--------------------------------\n\n  Le scraping (ou web scraping) est le processus de collecte automatique de données à partir de sites web en utilisant des logiciels ou des scripts. Il permet d'extraire des informations telles que des textes, des images, des prix, etc. à partir de pages web.\n  Dans notre exemple, nous utiliserons un script R pour que cette collecte nous crée notre base de données\n  \n:::{.callout-important}\n## Important\n\nLa légalité du scraping dépend de plusieurs facteurs, notamment les lois du pays dans lequel vous vous trouvez et les conditions d'utilisation du site web que vous souhaitez scraper. Dans de nombreux cas, le scraping peut être considéré comme une violation des conditions d'utilisation d'un site, ce qui pourrait entraîner des problèmes légaux.<br>\nCertains sites autorisent le scraping dans leurs conditions d'utilisation tant que cela n'engendre pas de surcharge du serveur ni de violations de la propriété intellectuelle. D'autres sites interdisent explicitement le scraping.<br>\nIl est important de revoir attentivement les conditions d'utilisation du site web ciblé et de consulter les lois en vigueur dans votre pays avant de vous engager dans le scraping. Il est recommandé de demander la permission du propriétaire du site web ou d'utiliser des sources de données publiques et librement accessibles pour éviter d'éventuels problèmes légaux.\n:::\n\n\nNous allons étudier des données NBA de la saison 2024 issues du site web : [https://www.basketball-reference.com/leagues/NBA_2024.html](https://www.basketball-reference.com/leagues/NBA_2024.html)\n\n\n![](conf. NBA.png)\n\n\nLa première table \"Eastern Conference\" comprend les statistiques des équipes de la conférence Est de la NBA. Nous allons explorer les différentes colonnes de la table pour comprendre les performances des équipes, les classements et les tendances dans la conférence Est.\n\nNotre scraping commencera par l'import des données sous forme de table :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://www.basketball-reference.com/leagues/NBA_2024.html\"   # recupération de l'url à scraper\ntable <- url %>% \n  read_html() %>%\n  html_table()    # import des données sous forme de table\n\n# Tune liste de tous les tableaux importés est créée, nous allons nous intérésser au tableau n°1\nstats_2024 <- as.data.frame(table[11])      # affectation du nom \"stats_2024\" au tableau 11 convertit en dataframe (DF)\n\n# Définir les noms des colonnes en utilisant la première ligne du tableau car les intitulés de colonne sont décalés\ncolnames(stats_2024) <- stats_2024[1, ]\n\n# Supprimer la première ligne du tableau\nstats_2024 <- stats_2024[-1, ]\n```\n:::\n\n\n\n<button id=\"toggleButton\">Afficher/Cacher liste variables</button>\n<div id=\"hiddenText\" style=\"display: none;\">\n``` markdown\nVariables explicatives :\n\n\t-\tTeam : Nom de l'équipe\n\t-\tAge : Moyenne d'âge de l'équipe\n\t-\tW : Nombre de victoires de l'équipe\n\t-\tL : Nombre de défaites de l'équipe\n\t-\tPW : Victoires pondérées (pondération en fonction de la qualité des adversaires)\n\t-\tPL : Défaites pondérées (pondération en fonction de la qualité des adversaires)\n\t-\tMOV : Marge de victoire moyenne\n\t-\tSOS : Force de l'opposition moyenne de l'équipe\n\t-\tSRS : Rating SRS (Simple Rating System) qui mesure la force relative d'une équipe (MOV + SOS)\n\t-\tORtg : Offensive Rating, mesure l'efficacité offensive de l'équipe (nombre de points marqués pour 100 possessions)\n\t-\tDRtg : Defensive Rating, mesure l'efficacité défensive de l'équipe (nombre de points encaissés pour 100 possessions)\n\t-\tNRtg : Net Rating, différence entre ORtg et DRtg (ORtg - DRtg)\n\t-\tPace : Rythme de jeu de l'équipe (nombre de possessions par match)\n\t-\tFTr : Ratio de lancers francs tentés par tirs tentés\n\t-\t3PAr : Ratio de tirs à 3 points tentés par tirs tentés\n\t-\tTS% : True Shooting Percentage, mesure l'efficacité globale des tirs (incluant les lancers francs et les tirs à 3 points)\n\t-\teFG% : Effective Field Goal Percentage, mesure l'efficacité des tirs à deux points et des tirs à 3 points (pondérés)\n\t-\tTOV% : Turnover Percentage, pourcentage de pertes de balle par possession\n\t-\tORB% : Offensive Rebound Percentage, pourcentage de rebonds offensifs récupérés par équipe\n\t-\tFT/FGA : Ratio de lancers francs tentés par tirs tentés\n\t-\teFG% : Effective Field Goal Percentage de l'adversaire, mesure l'efficacité des tirs adverses à deux points et des tirs à 3 points (pondérés)\n\t-\tTOV% : Turnover Percentage de l'adversaire, pourcentage de pertes de balle adverses par possession\n\t-\tDRB% : Defensive Rebound Percentage, pourcentage de rebonds défensifs récupérés par équipe\n\t-\tFT/FGA : Ratio de lancers francs adverses tentés par tirs adverses tentés\n\t-\tArena : Nom de l'arène où joue l'équipe\n\t-\tAttend. : Nombre total de spectateurs présents lors des matchs de l'équipe\n\t-\tAttend./G : Nombre moyen de spectateurs par match\n\n```\n</div>\n\n<style>\n#toggleButton {\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n</style>\n\n<script>\ndocument.getElementById(\"toggleButton\").addEventListener(\"click\", function() {\n  var hiddenText = document.getElementById(\"hiddenText\");\n  if (hiddenText.style.display === \"none\") {\n    hiddenText.style.display = \"block\";\n  } else {\n    hiddenText.style.display = \"none\";\n  }\n});\n</script>\n\n\n### Rapide analyse des valeurs :\n\n-   L'équipe ayant le meilleur bilan est les Boston Celtics avec 16 victoires et 5 défaites\n-   L'équipe la plus jeune en moyenne est les Oklahoma City Thunder avec une moyenne d'âge de 23 ans\n-   L'équipe la plus âgée en moyenne est les Los Angeles Clippers avec une moyenne d'âge de 30.9 ans\n-   Les Celtics ont la plus grande marge de victoire moyenne (MOV) avec 8.48 points\n-   La force de l'opposition moyenne (SOS) la plus élevée est celle des Houston Rockets avec 0.48\n-   Le rating SRS (SRS) le plus élevé est celui des Celtics avec 10.22\n-   Les Celtics ont le meilleur ORtg (118.3) et les Pistons ont le plus faible ORtg (107.8)\n-   Les Cavaliers ont le meilleur DRtg (111.5) et les Rockets ont le plus faible DRtg (109.7)\n-   L'équipe avec le rythme de jeu le plus rapide est les Pacers avec un pace de 104.2 possessions par match.\n-   Les Clippers ont le meilleur ratio de lancers francs tentés par tirs tentés (FT/FGA) avec 0.270\n-   Les Magic ont le plus haut ratio de lancers francs adverses tentés par tirs adverses tentés (FT/FGA) avec 0.247\n-   L'arène avec la plus grande affluence totale est le United Center avec 251,594 spectateurs\n-   L'arène avec la plus grande affluence moyenne par match est le Madison Square Garden (IV) avec 19,734 spectateurs par match\n\t\n\t\nCes données fournissent des informations détaillées sur les performances des équipes de la NBA, leurs statistiques offensives et défensives, ainsi que des informations sur les spectateurs lors des matchs.\n\n\n\nQuarto includes a number of features aimed at making it easy to to author and customize markdown table output, including:\n\n-   Specifying column alignment and widths.\n-   Providing captions, subcaptions, and cross-references.\n-   Generating tables dynamically from executable code cells.\n\nThis post provides an overview of these capabilities in Quarto. For more detail about all the features Quarto for authoring tables, see [Tables](/docs/authoring/tables.qmd).\n\n## Markdown Tables\n\nThe most commonly used markdown table is known as a pipe table. Pipe tables support specifying per column alignment as well as captions. For example:\n\n``` markdown\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table sytnax\n```\n\nHere is the table rendered to HTML:\n\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table syntax\n\n#### Caption Location\n\nBy default, table captions are positioned above tables. You can modify this behavior using the `tbl-cap-location` option. For example:\n\n``` yaml\n---\ntbl-cap-location: top\n---\n```\n\n## Explicit Column Widths\n\nBeyond standard pipe table syntax for expressing column width, you can also explicitly specify columns widths using the `tbl-colwidths` attribute or document-level option. For an individual markdown table, add the attribute after the caption. For example:\n\n``` markdown\n| fruit  | price  |\n|--------|--------:\n| apple  | 2.05   |\n| pear   | 1.37   |\n| orange | 3.09   |\n\n: Fruit prices {tbl-colwidths=\"[75,25]\"}\n```\n\nNote that this option is specified at the top level so that it can be shared by both PDF and HTML formats. If you are only targeting a single format you can place it alongside other `format` specific options.\n\nValid values for the caption location include:\n\n| Value    | Description                           |\n|----------|---------------------------------------|\n| `top`    | Position the caption above the table. |\n| `bottom` | Position the caption below the table. |\n| `margin` | Position the caption in the margin.   |\n\n## Computations\n\nAll of the options described above work for tables produced by executable code cells. For example, here we apply the `tbl-cap`, `tbl-colwidths` and `tbl-caption-location` options to a code cell:\n\n``` {{r}}\n#| tbl-cap: \"Cars\"\n#| tbl-colwidths: [60,40]\n#| tbl-cap-location: margin\n\nlibrary(knitr)\nkable(head(cars))\n```\n\nIn addition to the above, which focused on some of the features of Quarto when writing pipe tables in markdown, you can also author tables using grid syntax. You review the [documentation](/docs/authoring/tables.qmd). for more detail.\n\n-----------------------------------",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}