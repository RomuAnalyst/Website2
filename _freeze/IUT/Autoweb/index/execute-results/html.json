{
  "hash": "e04c707e65aac770e48075b30b4279bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Génération données aléatoires\"\nauthor: \"RomuAnalyst\"\ndate: \"18/05/2025 15:00:44\"\nformat: html\n---\n\n\n\n\n![](https://rtask.thinkr.fr/wp-content/uploads/migration-to-r4.2-in-ubuntu-22.04-header.png)\n\n## Introduction\n\nCe document présente un code R qui génère un jeu de données aléatoires, l'enregistre dans un fichier CSV et visualise les résultats avec des graphiques esthétiques.\n\n## Exécution du Code R\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Installer les packages nécessaires si absent\n\nto_install <- c(\"ggplot2\", \"dplyr\", \"readr\")\n\nnew_packages <- to_install[!(to_install %in% installed.packages()[,\"Package\"])]\n\nif(length(new_packages)) install.packages(new_packages)\n\n \n\n# Charger les bibliothèques nécessaires\n\nlibrary(dplyr)\n\nlibrary(ggplot2)\n\nlibrary(readr)\n```\n:::\n\n\n\n\n### Génération du DataFrame\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Création du dataframe df\n\ndf <- tibble(x = 1:10, y = rnorm(10))\n\n \n\n# Ajout d'une troisième colonne z comme produit de x et y\n\ndf <- df %>% mutate(z = x * y)\n\n \n\n# Enregistrement dans un fichier CSV\n\nwrite_csv(df, \"donnees_aleatoires.csv\")\n\n \n\n# Affichage du dataframe\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n       x        y       z\n   <int>    <dbl>   <dbl>\n 1     1  1.87     1.87  \n 2     2  0.229    0.458 \n 3     3 -0.625   -1.87  \n 4     4  0.677    2.71  \n 5     5 -0.428   -2.14  \n 6     6  0.00179  0.0107\n 7     7 -1.30    -9.13  \n 8     8  0.507    4.06  \n 9     9  1.24    11.2   \n10    10 -0.759   -7.59  \n```\n\n\n:::\n:::\n\n\n\n\n### Analyse Descriptive\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Statistiques descriptives\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       x               y                 z          \n Min.   : 1.00   Min.   :-1.3038   Min.   :-9.1266  \n 1st Qu.: 3.25   1st Qu.:-0.5756   1st Qu.:-2.0747  \n Median : 5.50   Median : 0.1154   Median : 0.2344  \n Mean   : 5.50   Mean   : 0.1409   Mean   :-0.0443  \n 3rd Qu.: 7.75   3rd Qu.: 0.6343   3rd Qu.: 2.4965  \n Max.   :10.00   Max.   : 1.8670   Max.   :11.1835  \n```\n\n\n:::\n:::\n\n\n\n\n### Visualisation des Données\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Graphique de dispersion avec personnalisation\nggplot(df, aes(x = x, y = y)) +\n  geom_point(color = \"#1f78b4\", size = 3) +  # Points en bleu\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#e31a1c\", linetype = \"dashed\") +  # Ligne de tendance rouge\n  labs(title = \"Graphique de Dispersion avec Régression\",\n       subtitle = \"Analyse des relations entre x et y\",\n       x = \"Valeur de x\",\n       y = \"Valeur de y\") +\n  theme_minimal(base_size = 14)  # Thème modernisé\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n### Analyse Graphique\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogramme de la colonne y\nggplot(df, aes(x = y)) +\n  geom_histogram(binwidth = 0.5, fill = \"#1f78b4\", color = \"white\") +\n  labs(title = \"Histogramme de la variable y\",\n       x = \"Valeur de y\",\n       y = \"Fréquence\") +\n  theme_minimal(base_size = 14)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Boxplot de la colonne y\nggplot(df, aes(x = \"\", y = y)) +\n  geom_boxplot(fill = \"#1f78b4\") +\n  labs(title = \"Boxplot de la variable y\",\n       y = \"Valeur de y\") +\n  theme_minimal(base_size = 14)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\n\n## Conclusion\n\nCe document illustre la génération, l'analyse descriptive et graphique de données aléatoires en R, avec une mise en forme améliorée et une meilleure expérience utilisateur.\n```\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}